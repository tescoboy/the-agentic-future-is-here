name: PR Checks

on:
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # Fast PR checks - only essential tests
  pr-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run code formatting checks
      run: |
        echo "üé® Checking code formatting..."
        black app/ tests/ --line-length=100 --check --diff
        isort app/ tests/ --profile=black --line-length=100 --check --diff
    
    - name: Run linting
      run: |
        echo "üîç Running Flake8 linting..."
        flake8 app/ tests/ --max-line-length=100 --extend-ignore=E203,W503 --count --statistics
    
    - name: Run type checking
      run: |
        echo "üîç Running MyPy type checking..."
        mypy app/ --ignore-missing-imports --disallow-untyped-defs --show-error-codes
    
    - name: Run fast tests
      run: |
        echo "üß™ Running fast tests..."
        pytest tests/ -m "not slow" -v --tb=short --maxfail=5
    
    - name: Check test coverage
      run: |
        echo "üìä Checking test coverage..."
        pytest tests/ -m "not slow" --cov=app --cov-report=term-missing --cov-fail-under=70 --maxfail=5

  # Security scan for PRs
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run security checks
      run: |
        echo "üîí Running security analysis..."
        bandit -r app/ -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: pr-security-reports
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 7

